<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="/socket.io/socket.io.js"></script>

    <title>Document</title>
    <style>
      #space {
        width: 30vh;
        height: 50vh;
        background-color: yellow;
        flex-direction: column;
      }

      .right-align {
        text-align: right;
      }

      .left-align {
        text-align: left;
      }
    </style>
  </head>
  <body>
    <div id="space"></div>
    <form id="chat">
      <input type="text" id="message" placeholder="채팅내용" />
      <button>채팅</button>
    </form>
    <script>
      const chatForm = document.querySelector("#chat");
      const space = document.querySelector("#space");
      const socket = io();
      const chatroom = prompt("채팅방을 입력하세요. ");
      const Username = prompt("이름을 입력하세요. ");
      socket.emit("join", chatroom);

      socket.on("userjoin", (message) => {
        console.log(message);
      });
      // socket.on("receive", (message) => {
      //   const p = document.createElement("p"); //p태그 생성
      //   p.textContent = message;
      //   p.classList.add("right-align"); // 오른쪽 정렬 클래스 추가
      //   space.appendChild(p);
      // });

      socket.on("send", (message) => {
        console.log(message);
        const p = document.createElement("p");
        p.textContent = `${message.name}: ${message.msg}`;
        p.classList.add("left-align"); // 왼쪽 정렬 클래스 추가
        space.appendChild(p);
      });

      chatForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const msg = chatForm.querySelector("#message");
        const p = document.createElement("p"); //p태그 생성
        p.textContent = `${Username}:${msg.value}`;
        p.classList.add("right-align"); // 오른쪽 정렬 클래스 추가
        space.appendChild(p);
        socket.emit("message", { name: Username, msg: msg.value });
        msg.value = "";
      });
    </script>
  </body>
</html>
