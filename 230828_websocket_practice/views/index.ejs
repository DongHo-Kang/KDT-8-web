<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <h4>채팅방에 입장하셨습니다.</h4>
    <ul></ul>
    <form id="chat">
      <input type="text" id="content" placeholder="내용" />
      <input type="text" id="name" placeholder="이름" /> <br />
      <button>보내기</button>
    </form>
    <script>
      const ul = document.querySelector("ul");
      const socket = new WebSocket("ws://localhost:8000");
      socket.addEventListener("open", (event) => {
        console.log("서버에 연결되었습니다.");
      });
      socket.addEventListener("message", (event) => {
        const data = JSON.parse(event.data);
        const li = document.createElement("li");
        const h5 = document.createElement("h5");
        li.textContent = `내용: ${data.content}`;
        h5.textContent = `이름: ${data.name}`;
        ul.appendChild(li);
        ul.appendChild(h5);
      });
      socket.addEventListener("error", (event) => {
        console.log(`오류가 발생하였습니다.`, event.console.error);
      });
      socket.addEventListener("close", (event) => {
        console.log("서버와 연결이 종료됨");
      });

      const chatForm = document.querySelector("#chat");
      chatForm.addEventListener("submit", (event) => {
        event.preventDefault();
        const content = chatForm.querySelector("#content");
        const name = chatForm.querySelector("#name");
        const data = { content: content.value, name: name.value };
        socket.send(JSON.stringify(data));
        //서버에서 받을 때는 문자열로 받아야한다.(객체로 보내면 서버에서 처리를 못할 수 있다.)
        //(문자열을 모든 프로그램에서 동일하다.) 그래서 JSON.stringify를 사용한다.
        //서버가 모두 nodejs가 아니기때문에 서버로 보내는 데이터는 문자열로 보내야 한다.
        content.value = "";
        name.value = "";
      });
    </script>
  </body>
</html>
